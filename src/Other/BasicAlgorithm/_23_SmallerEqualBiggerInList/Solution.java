package Other.BasicAlgorithm._23_SmallerEqualBiggerInList;

/*
 * 将单向链表按某值划分成左边小、中间相等、右边大的形式
 *
 * 题目描述 1：
 * 给定一个单向链表的头节点 head，在给定一个整数 pivot，实现一个调整链表的函数。
 * 将链表调整为左部分的值都是小于 pivot 的节点，中间都是等于 pivot 的节点，右部分的值都是大于 pivot 的部分。
 *
 * 题目描述 2 (进阶)：
 * 使该算法具有稳定性，时间复杂度为 O(N)，额外空间复杂度为 O(1)
 *
 * 思路 1：
 * 开一个节点类型的数组，使用荷兰国旗问题后，再将其串成链表即可。
 *
 * 思路 2：
 * 1. 设置三个 node 类型的变量：less、equal、more；
 * 2. 遍历一遍链表，将第一个小于 pivot 的节点给 less，将第一个等于 pivot 的节点给 equal，将第一个大于 pivot 的节点给 more；
 * 3. 再遍历一遍链表，同时将不同的值放进不同的区域中，然后串起来；
 * 4. 最后将“小于区域”的尾部与“等于区域”的头部重连，将“等于区域”的尾部与“大于区域”的头部重连即可；
 * 5. 相当于将一个大连表拆分成三个小链表，然后将这三个小链表重新串起来。
 */
public class Solution {


}
